<UserControl x:Class="BattleInfoPlugin.Views.ToolView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:views="clr-namespace:BattleInfoPlugin.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:viewModels="clr-namespace:BattleInfoPlugin.ViewModels"
             xmlns:models="clr-namespace:BattleInfoPlugin.Models"
             Background="{DynamicResource ThemeBrushKey}"
             Foreground="{DynamicResource ActiveForegroundBrushKey}"
             mc:Ignorable="d"
             d:DesignHeight="530"
             d:DesignWidth="640"
             d:DataContext="{d:DesignInstance viewModels:ToolViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/PluginStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}"
                                     MessageKey="Show/EnemyWindow">
            <l:TransitionInteractionMessageAction Mode="NewOrActive"
                                                  WindowType="views:EnemyWindow"
                                                  IsOwned="False" />
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}"
                                     MessageKey="Show/BattleWindow">
            <l:TransitionInteractionMessageAction Mode="NewOrActive"
                                                  WindowType="views:BattleWindow"
                                                  IsOwned="False" />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0">
            <TextBlock Text="{Binding Battle.Name}"
                       Style="{DynamicResource HeaderTextStyleKey}"
                       Margin="10,5" />

            <Button Content="{Binding Resources.New_Window_Button, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
                    DockPanel.Dock="Right"
                    HorizontalAlignment="Right"
                    Margin="2">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <ei:CallMethodAction TargetObject="{Binding}"
                                             MethodName="OpenBattleWindow" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <views:NextCellInfoView DataContext="{Binding Battle.NextCellInfo}"
                                    Margin="0,4,0,0" />

        </DockPanel>
        <ScrollViewer Grid.Row="1"
                      x:Name="Main"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      PanningMode="Both">
            <views:BattleView DataContext="{Binding Battle}"
                              d:DataContext="{d:DesignData /SampleData/BattleViewModelSampleData.xaml}" />
        </ScrollViewer>

        <ToggleButton Grid.Row="1"
                      x:Name="SettingsToggleButton"
                      IsChecked="True">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}"
                       BasedOn="{StaticResource SettingsPanelToggleButtonStyle}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ComputedHorizontalScrollBarVisibility, ElementName=Main}"
                                           Value="Visible" />
                                <Condition Binding="{Binding ComputedVerticalScrollBarVisibility, ElementName=Main}"
                                           Value="Collapsed" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin">
                                <Setter.Value>
                                    <Thickness Bottom="17" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ComputedHorizontalScrollBarVisibility, ElementName=Main}"
                                           Value="Collapsed" />
                                <Condition Binding="{Binding ComputedVerticalScrollBarVisibility, ElementName=Main}"
                                           Value="Visible" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin">
                                <Setter.Value>
                                    <Thickness Right="17" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>

        <StackPanel Grid.Row="2"
                    Visibility="{Binding IsChecked, ElementName=SettingsToggleButton, Converter={StaticResource TrueToVisibleConverter}}"
                    Background="{DynamicResource BackgroundBrushKey}">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        Margin="2">
                <CheckBox Content="{Binding Resources.Show_LBAS_Check, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
                          IsChecked="{Binding Battle.IsShowLandBaseAirStage}"
                          Margin="0,0,10,0" />
                <CheckBox Content="{Binding Resources.Notify_Battle_End, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
                          IsChecked="{Binding Notifier.IsEnabled}"
                          Margin="0,0,10,0" />
                <CheckBox Content="{Binding Resources.Notify_Inactive, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
                          IsChecked="{Binding Notifier.IsNotifyOnlyWhenInactive}"
                          Margin="0,0,10,0" />
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
